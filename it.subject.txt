Capitolo III
Parte obbligatoria

Questo progetto riguarda la creazione di un sito web per il grande torneo di Pong!

III.1 Panoramica
Il tuo software offrir√† una bella interfaccia utente e funzionalit√† multiplayer in tempo reale che permetteranno di giocare a Pong con tutti i tuoi amici!

‚Ä¢ Inizialmente, il tuo progetto deve aderire alle linee guida obbligatorie come requisito minimo (vedi sezione successiva), che rappresenteranno solo una piccola parte del voto finale.

‚Ä¢ La seconda parte di questo subject offrir√† moduli aggiuntivi che possono sostituire o integrare la parte obbligatoria.

‚Ä¢ L'uso di librerie o strumenti che forniscono una soluzione immediata e completa per un'intera funzionalit√† o modulo √® proibito.

‚Ä¢ Qualsiasi istruzione diretta riguardante l'uso (pu√≤, deve, non pu√≤) di una libreria o strumento di terze parti deve essere seguita.

‚Ä¢ L'uso di una piccola libreria o strumento che risolve un compito semplice e unico rappresentando un sottocomponente di una funzionalit√† o modulo pi√π grande, √® consentito.

‚Ä¢ Durante la valutazione, il team giustificher√† qualsiasi utilizzo di
librerie o strumenti che non sono esplicitamente approvati dalle linee guida del progetto e che non sono in contraddizione con i vincoli del progetto.

‚Ä¢ Durante la valutazione, l'evaluatore si assumer√† la responsabilit√† di determinare se l'uso di una specifica libreria o strumento
√® legittimo (e consentito) o se risolve essenzialmente un'intera funzionalit√† o modulo (e quindi √® proibito).

III.2 Requisiti tecnici minimi
Il tuo progetto deve rispettare le seguenti regole:

Alcuni di questi vincoli possono essere superati dalla scelta di moduli specifici.

‚Ä¢ Sei libero di sviluppare il sito, con o senza un backend.

‚ó¶ Se scegli di includere un backend, deve essere scritto in puro PHP senza framework. Tuttavia, questo requisito pu√≤ essere superato dal modulo Framework.

‚ó¶ Se il tuo backend o framework utilizza un database, devi seguire i vincoli del modulo Database.

‚Ä¢ Il frontend deve essere sviluppato utilizzando Typescript come codice base. Tuttavia, questo
requisito pu√≤ essere modificato tramite il modulo FrontEnd.

‚Ä¢ Il tuo sito web deve essere un'applicazione a pagina singola. L'utente deve essere in grado di utilizzare i pulsanti Indietro e Avanti del browser.

‚Ä¢ Il tuo sito web deve essere compatibile con l'ultima versione stabile e aggiornata di
Mozilla Firefox. Ovviamente, pu√≤ essere compatibile con altri browser web!

‚Ä¢ L'utente non deve incontrare errori o avvisi non gestiti durante la navigazione sul sito web.

‚Ä¢ Devi utilizzare Docker per eseguire il tuo sito web. Tutto deve essere avviato con una singola riga di comando per eseguire un container autonomo.

Esistono diverse tecnologie per i container: Docker, containerd, podman, ecc.
Sui computer del tuo campus, potresti accedere al software dei container in modalit√† senza privilegi di root per motivi di sicurezza. Questo potrebbe portare ai seguenti vincoli aggiuntivi:

‚Ä¢ Il tuo runtime deve essere posizionato in /goinfre o /sgoinfre.

‚Ä¢ Non puoi utilizzare "bind-mount volumes" tra l'host e il container se vengono utilizzati UID non-root nel container.

A seconda dei requisiti attuali del subject (evidenziati in verde sopra) e della configurazione locale nei cluster, potresti dover
adottare strategie diverse, come: soluzione container in macchina virtuale, ricostruire il tuo container dopo le modifiche, creare la tua immagine con root come unico UID.

III.3 Gioco
Lo scopo major di questo sito web √® giocare a Pong contro altri giocatori.

‚Ä¢ Gli utenti devono poter partecipare a una partita di Pong in tempo reale contro un altro giocatore direttamente sul sito web.
Entrambi i giocatori utilizzeranno la stessa tastiera. Il modulo Giocatori remoti pu√≤ migliorare questa funzionalit√† con giocatori remoti.

‚Ä¢ Un giocatore deve poter giocare contro un altro, e deve essere disponibile un sistema di torneo.
Questo torneo consister√† in pi√π giocatori che possono alternarsi giocando l'uno contro l'altro.
Hai flessibilit√† su come implementare il torneo, ma deve mostrare chiaramente chi sta giocando contro chi e l'ordine di gioco.

‚Ä¢ √à richiesto un sistema di registrazione: all'inizio di un torneo, ogni giocatore deve inserire il proprio alias.
Gli alias verranno resettati quando inizia un nuovo torneo. Tuttavia, questo requisito pu√≤ essere modificato utilizzando il modulo Gestione Utenti Standard.

‚Ä¢ Deve esserci un sistema di matchmaking: il sistema del torneo dovrebbe organizzare il matchmaking dei partecipanti e annunciare la prossima partita.

‚Ä¢ Tutti i giocatori devono rispettare le stesse regole, incluso avere la stessa velocit√† della racchetta. 
Questo requisito si applica anche quando si utilizza l'IA; l'IA deve mostrare la stessa velocit√† di un giocatore normale.

‚Ä¢ Il gioco deve rispettare i vincoli predefiniti del frontend (come descritto sopra), oppure puoi scegliere di utilizzare il modulo FrontEnd o sovrascriverlo con il modulo Grafica.
Sebbene l'estetica visiva possa variare, il gioco deve comunque catturare l'essenza del Pong originale (1972).

III.4 Preoccupazioni sulla sicurezza
Per creare un sito web funzionale, ci sono diverse preoccupazioni sulla sicurezza che devi affrontare:

‚Ä¢ Qualsiasi password memorizzata nel tuo database, se applicabile, deve essere hashata.
‚Ä¢ Il tuo sito web deve essere protetto contro attacchi SQL injection/XSS.   ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è
‚Ä¢ Se hai un backend o altre funzionalit√†, √® obbligatorio abilitare una connessione HTTPS per tutti gli aspetti (usa wss invece di ws, ad esempio). ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏èv
‚Ä¢ Devi implementare meccanismi di validazione per i form e qualsiasi input utente, sia sulla pagina base se non viene utilizzato un backend, sia lato server se viene impiegato un backend.
‚Ä¢ Indipendentemente dal fatto che tu scelga di implementare il modulo di sicurezza JWT con 2FA, √® essenziale dare priorit√† alla sicurezza del tuo sito web. Ad esempio, se scegli di creare un'API, assicurati che le tue route siano protette. Anche se decidi di non utilizzare i token JWT, la sicurezza del sito rimane fondamentale.

Assicurati di utilizzare un algoritmo di hashing delle password robusto.

Per ovvi motivi di sicurezza, qualsiasi credenziale, chiave API, variabile d'ambiente, ecc., deve essere salvata localmente in un file .env e ignorata da git. Le credenziali archiviate pubblicamente causeranno il fallimento del tuo progetto.

Capitolo IV
Moduli

Ora che hai completato il 25% del progetto, congratulazioni!

Con un sito web di base funzionante, il prossimo passo √® scegliere i moduli per ulteriori miglioramenti.

Per raggiungere il 100% del completamento del progetto, √® necessario un minimo di 7 moduli principali. √à cruciale esaminare attentamente ogni modulo poich√© potrebbe richiedere modifiche al tuo sito web di base. Pertanto, ti consigliamo vivamente di leggere attentamente l'intero subject.

Due Moduli Minori contano come un Modulo Maggiore.

IV.1 Panoramica
‚Ä¢ Web (Samus)

‚ó¶ Modulo major: Utilizzare un framework per costruire il backend.                            ‚ù§Ô∏è‚Äçü©π‚úÖ 
‚ó¶ Modulo minor: Utilizzare un framework o un toolkit per costruire il frontend.              ‚ù§Ô∏è‚Äçü©π  
‚ó¶ Modulo minor: Utilizzare un database per il backend.                                       ‚ù§Ô∏è‚Äçü©π‚úÖ 
‚ó¶ Modulo major: Memorizzare il punteggio di un torneo sulla Blockchain.                      ‚ù§Ô∏è‚Äçü©π forse

TOT 2 + 1

‚Ä¢ Gestione Utenti (backend+fontend) (samus + uli, francesco)

‚ó¶ Modulo major: Gestione standard degli utenti, autenticazione, utenti attraverso i tornei.  ‚ù§Ô∏è‚Äçü©π‚úÖ 
‚ó¶ Modulo major: Implementare un'autenticazione remota.                                       ‚ù§Ô∏è‚Äçü©π forse

TOT 3 + 2

‚Ä¢ Gameplay ed esperienza utente (Andrea)
‚ó¶ Modulo major: Giocatori remoti.                                                            ‚ù§Ô∏è‚Äçü©π forse
‚ó¶ Modulo major: Multiplayer (pi√π di 2 giocatori nello stesso gioco).                         ‚ù§Ô∏è‚Äçü©π 
‚ó¶ Modulo major: Aggiungere un altro gioco con cronologia utente e matchmaking.               ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Opzioni di personalizzazione del gioco.                                      ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo major: Chat in tempo reale.                                                         ‚ù§Ô∏è‚Äçü©π forse

TOT 8.5 (2 forse)

‚Ä¢ AI-Algo  (Samus)

‚ó¶ Modulo major: Introdurre un avversario AI.                                                 ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Dashboard per statistiche utente e di gioco.                                 ‚ù§Ô∏è‚Äçü©π‚úÖ 

TOT 10 (2 forse)

‚Ä¢ Cybersecurity

‚ó¶ Modulo major: Implementare WAF/ModSecurity con una configurazione rinforzata e HashiCorp Vault per la gestione dei segreti.
‚ó¶ Modulo minor: Opzioni di conformit√† GDPR con anonimizzazione dei dati, gestione locale dei dati e cancellazione dell'account.
‚ó¶ Modulo major: Implementare l'autenticazione a due fattori (2FA) e JWT.                     ‚ù§Ô∏è‚Äçü©π‚úÖ 

‚Ä¢ Devops

‚ó¶ Modulo major: Configurazione dell'infrastruttura per la gestione dei log.
‚ó¶ Modulo minor: Sistema di monitoraggio.
‚ó¶ Modulo major: Progettare il backend come microservizi.

‚Ä¢ Grafica (uli - andrea)

‚ó¶ Modulo major: Utilizzare tecniche avanzate 3D.                                           

TOT 11 (3 forse)

‚Ä¢ Accessibilit√† (francesco)

‚ó¶ Modulo minor: Supporto su tutti i dispositivi.                                            ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Espansione della compatibilit√† con i browser.                               ‚ù§Ô∏è‚Äçü©π‚úÖ        
‚ó¶ Modulo minor: Supporto per pi√π lingue.                                                    ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Aggiunta di funzionalit√† di accessibilit√† per utenti ipovedenti.
‚ó¶ Modulo minor: Integrazione del rendering lato server (SSR).

TOT 12.5

possiamo perdere 3pt forse per 125%

‚Ä¢ Pong lato server

‚ó¶ Modulo major: Sostituire il Pong di base con un Pong lato server e implementare un'API.

‚ó¶ Modulo major: Abilitare il gameplay di Pong tramite CLI contro utenti web con integrazione API.

IV.2 Web
Questi moduli consentono l'integrazione di funzionalit√† web avanzate nel tuo gioco Pong.

‚Ä¢ Modulo major: Utilizzare un framework per costruire il backend.
In questo modulo major, √® richiesto l'uso di un framework web specifico per lo sviluppo del backend: Fastify con Node.js.

Puoi creare il backend senza utilizzare i vincoli di questo modulo utilizzando il linguaggio backend predefinito (come specificato sopra nella parte obbligatoria). Tuttavia, questo modulo sar√† valido solo se segui i suoi requisiti.

‚Ä¢ Modulo minor: Utilizzare un framework o toolkit per costruire il frontend.
Il tuo sviluppo frontend deve utilizzare Tailwind CSS in aggiunta a Typescript, e nient'altro.

Puoi creare un frontend senza utilizzare i vincoli di questo modulo seguendo le direttive frontend predefinite (come specificato sopra nella parte obbligatoria). Tuttavia, questo modulo sar√† valido solo se segui i suoi requisiti.

‚Ä¢ Modulo minor: Utilizzare un database per il backend -e altro.
Il database designato per tutte le istanze DB nel tuo progetto √® SQLite. Questa scelta garantisce la coerenza dei dati e la compatibilit√† tra tutti i componenti del progetto e potrebbe essere un prerequisito per altri moduli, come il modulo Framework backend.

‚Ä¢ Modulo major: Memorizzare il punteggio di un torneo sulla Blockchain.
Questo modulo major si concentra sull'implementazione di una funzionalit√† all'interno del sito web Pong per memorizzare in modo sicuro i punteggi dei tornei su una blockchain. √à essenziale chiarire che, per scopi di sviluppo e test, utilizzeremo un ambiente blockchain di test. La blockchain scelta per questa implementazione √® Avalanche, e Solidity sar√† il linguaggio di programmazione utilizzato per lo sviluppo degli smart contract.

‚ó¶ Integrazione Blockchain: L'obiettivo major di questo modulo √® integrare senza problemi la tecnologia blockchain, in particolare Avalanche, nel sito web Pong. Questa integrazione garantisce la memorizzazione sicura e immutabile dei punteggi dei tornei, fornendo ai giocatori un registro trasparente e a prova di manomissione dei loro risultati di gioco.

‚ó¶ Smart Contract Solidity: Per interagire con la blockchain, svilupperemo smart contract in Solidity. Questi contratti saranno responsabili della registrazione, gestione e recupero dei punteggi dei tornei.

‚ó¶ Blockchain di test: Come accennato in precedenza, verr√† utilizzata una blockchain di test per scopi di sviluppo e test. Questo garantisce che tutte le funzionalit√† relative alla blockchain siano convalidate a fondo senza alcun rischio associato a una blockchain live.

‚ó¶ Interoperabilit√†: Questo modulo potrebbe avere dipendenze da altri moduli, in particolare il modulo Framework backend. L'integrazione della funzionalit√† blockchain potrebbe richiedere adeguamenti nel backend per accogliere le interazioni con la blockchain.

Implementando questo modulo, miriamo a migliorare il sito web di Pong introducendo un sistema di archiviazione dei punteggi basato su blockchain. Gli utenti beneficeranno di un ulteriore livello di sicurezza e trasparenza, garantendo l'integrit√† dei loro punteggi di gioco. Il modulo enfatizza l'uso di un ambiente blockchain di test per minimizzare i rischi associati allo sviluppo su blockchain.

IV.3 Gestione Utenti
Questo modulo esplora il campo della Gestione Utenti, affrontando aspetti chiave delle interazioni degli utenti e del controllo degli accessi all'interno della piattaforma Pong. Comprende due componenti principali, ciascuno focalizzato su elementi essenziali della gestione e autenticazione degli utenti: la partecipazione degli utenti a pi√π tornei e l'implementazione dell'autenticazione remota.

‚Ä¢ Modulo major: Gestione standard degli utenti, autenticazione e utenti attraverso i tornei.

‚ó¶ Gli utenti possono iscriversi al sito web in modo sicuro.
‚ó¶ Gli utenti registrati possono accedere in modo sicuro.
‚ó¶ Gli utenti possono selezionare un nome visualizzato unico per partecipare ai tornei.
‚ó¶ Gli utenti possono aggiornare le proprie informazioni.
‚ó¶ Gli utenti possono caricare un avatar, con un'opzione predefinita se non ne viene fornito uno.
‚ó¶ Gli utenti possono aggiungere altri come amici e visualizzare il loro stato online.
‚ó¶ I profili utente mostrano statistiche, come vittorie e sconfitte.
‚ó¶ Ogni utente ha una Cronologia Partite che include partite 1v1, date e dettagli rilevanti, accessibile agli utenti connessi.

La gestione di nomi utente/email duplicati √® a tua discrezione; assicurati di fornire una soluzione logica.

‚Ä¢ Modulo major: Implementare l'autenticazione remota.
In questo modulo major, l'obiettivo √® implementare il seguente sistema di autenticazione: Google Sign-in.

Caratteristiche principali e obiettivi includono:

‚ó¶ Integrare il sistema di autenticazione, consentendo agli utenti di accedere in modo sicuro.
‚ó¶ Ottenere le credenziali e i permessi necessari dall'autorit√† per abilitare l'accesso sicuro.
‚ó¶ Implementare flussi di login e autorizzazione user-friendly che rispettino le migliori pratiche e gli standard di sicurezza.
‚ó¶ Garantire lo scambio sicuro di token di autenticazione e informazioni utente tra l'applicazione web e il provider di autenticazione.

Questo modulo major mira a fornire un'autenticazione remota degli utenti, offrendo loro un modo sicuro e conveniente per accedere all'applicazione web.
IV.4 Gameplay ed esperienza utente
Questi moduli sono progettati per migliorare l'esperienza complessiva di gioco del progetto.

‚Ä¢ Modulo major: Giocatori remoti
Dovrebbe essere possibile per due giocatori giocare da remoto. Ogni giocatore si trova su un computer separato, accedendo allo stesso sito web e giocando allo stesso gioco Pong.

Considera i problemi di rete, come disconnessioni improvvise o lag.
Devi offrire la migliore esperienza utente possibile.

‚Ä¢ Modulo major: Pi√π giocatori
Dovrebbe essere possibile avere pi√π di due giocatori. Ogni giocatore necessita di un controllo in tempo reale (quindi il modulo "giocatori remoti" √® fortemente raccomandato). Sta a te decidere come il gioco potrebbe essere giocato con 3, 4, 5, 6 o pi√π giocatori. Oltre al gioco regolare a 2 giocatori, puoi definire un numero specifico di giocatori, maggiore di 2, per questo modulo multiplayer. Es: 4 giocatori potrebbero giocare su un tabellone quadrato, con ogni giocatore che controlla un lato unico del quadrato.

‚Ä¢ Modulo major: Aggiungere un altro gioco con cronologia utente e matchmaking.
L'obiettivo di questo modulo major √® introdurre un nuovo gioco, distinto da Pong, e incorporare funzionalit√† come il tracciamento della cronologia utente e il matchmaking. Caratteristiche principali e obiettivi includono:

‚ó¶ Sviluppare un nuovo gioco coinvolgente per diversificare l'offerta della piattaforma e intrattenere gli utenti.
‚ó¶ Implementare il tracciamento della cronologia utente per registrare e mostrare le statistiche di gioco individuali degli utenti.
‚ó¶ Creare un sistema di matchmaking per consentire agli utenti di trovare avversari e partecipare a partite eque e bilanciate.
‚ó¶ Garantire che la cronologia di gioco degli utenti e i dati di matchmaking siano archiviati in modo sicuro e rimangano aggiornati.
‚ó¶ Ottimizza le prestazioni e la reattivit√† del nuovo gioco per offrire un'esperienza utente piacevole. Aggiorna e mantieni regolarmente il gioco per correggere bug, aggiungere nuove funzionalit√† e migliorare il gameplay.

Questo modulo major mira ad ampliare la tua piattaforma introducendo un nuovo gioco, migliorando il coinvolgimento degli utenti con la cronologia delle partite e facilitando il matchmaking per un'esperienza di gioco piacevole.

‚Ä¢ Modulo minor: Opzioni di personalizzazione del gioco.
In questo modulo minor, l'obiettivo √® fornire opzioni di personalizzazione per tutti i giochi disponibili sulla piattaforma. Caratteristiche principali e obiettivi includono:

‚ó¶ Offrire funzionalit√† di personalizzazione, come power-up, attacchi o mappe diverse, che migliorano l'esperienza di gioco.

‚ó¶ Consentire agli utenti di scegliere una versione predefinita del gioco con funzionalit√† di base se preferiscono un'esperienza pi√π semplice.

‚ó¶ Garantire che le opzioni di personalizzazione siano disponibili e applicabili a tutti i giochi offerti sulla piattaforma.

‚ó¶ Implementare menu o interfacce di impostazioni user-friendly per regolare i parametri di gioco.

‚ó¶ Mantenere la coerenza nelle funzionalit√† di personalizzazione tra tutti i giochi per fornire un'esperienza utente unificata.

Questo modulo mira a dare agli utenti la flessibilit√† di personalizzare la loro esperienza di gioco su tutti i giochi disponibili, fornendo una variet√† di opzioni di personalizzazione e offrendo anche una versione predefinita per coloro che preferiscono un gameplay pi√π semplice.

‚Ä¢ Modulo major: Chat in tempo reale.

In questo modulo, √® necessario creare una funzione di chat per gli utenti:

‚ó¶ L'utente dovrebbe essere in grado di inviare messaggi diretti ad altri utenti.
‚ó¶ L'utente dovrebbe essere in grado di bloccare altri utenti, impedendo loro di vedere ulteriori messaggi dall'account bloccato.
‚ó¶ L'utente dovrebbe essere in grado di invitare altri utenti a giocare a una partita di Pong tramite l'interfaccia della chat.
‚ó¶ Il sistema di torneo dovrebbe essere in grado di notificare agli utenti la prossima partita.
‚ó¶ L'utente dovrebbe essere in grado di accedere ai profili di altri giocatori tramite l'interfaccia della chat.

IV.5 AI-Algo
Questi moduli servono per introdurre elementi basati sui dati nel progetto. Il modulo major introduce un avversario AI per migliorare il gameplay, mentre il modulo minor si concentra su dashboard di statistiche per utenti e giochi, offrendo agli utenti una panoramica minimalista ma approfondita delle loro esperienze di gioco.

‚Ä¢ Modulo major: Introdurre un avversario AI.
In questo modulo major, l'obiettivo √® incorporare un giocatore AI nel gioco. Notare che l'uso dell'algoritmo A* non √® consentito per questo compito. Caratteristiche principali e obiettivi includono:

‚ó¶ Sviluppare un avversario AI che offra un'esperienza di gioco stimolante e coinvolgente per gli utenti.

‚ó¶ L'AI deve replicare il comportamento umano, il che significa che nella tua implementazione dell'AI, devi simulare l'input della tastiera. Il vincolo qui √® che l'AI pu√≤ aggiornare la sua visione del gioco solo una volta al secondo, richiedendo di anticipare i rimbalzi e altre azioni.

L'AI deve utilizzare i power-up se hai scelto di implementare il modulo Opzioni di personalizzazione del gioco.

‚ó¶ Implementare logiche e processi decisionali AI che consentano al giocatore AI di compiere mosse intelligenti e strategiche.

‚ó¶ Esplorare algoritmi e tecniche alternative per creare un giocatore AI efficace senza fare affidamento su A*.

‚ó¶ Garantire che l'AI si adatti a diversi scenari di gioco e interazioni con gli utenti.

Dovrai spiegare in dettaglio come funziona la tua AI durante la valutazione. Creare un'AI che non faccia nulla √® strettamente proibito; deve avere la capacit√† di vincere occasionalmente.

Questo modulo major mira a migliorare il gioco introducendo un avversario AI che aggiunge emozione e competitivit√† senza fare affidamento sull'algoritmo A*.

‚Ä¢ Modulo minor: Dashboard di statistiche per utenti e giochi.
In questo modulo minor, l'obiettivo √® introdurre dashboard che mostrino statistiche per singoli utenti e sessioni di gioco. Caratteristiche principali e obiettivi includono:

‚ó¶ Creare dashboard user-friendly che forniscano agli utenti informazioni sulle loro statistiche di gioco.

‚ó¶ Sviluppare un dashboard separato per le sessioni di gioco, mostrando statistiche dettagliate, risultati e dati storici per ogni partita.

‚ó¶ Garantire che i dashboard offrano un'interfaccia utente intuitiva e informativa per tracciare e analizzare i dati.

‚ó¶ Implementare tecniche di visualizzazione dei dati, come grafici e diagrammi, per presentare le statistiche in modo chiaro e visivamente accattivante.

‚ó¶ Consentire agli utenti di accedere e esplorare comodamente la propria cronologia di gioco e le metriche delle prestazioni.

‚ó¶ Sentiti libero di aggiungere qualsiasi metrica che ritieni utile.

Questo modulo minor mira a fornire agli utenti la possibilit√† di monitorare le loro statistiche di gioco e i dettagli delle sessioni di gioco attraverso dashboard user-friendly, offrendo una visione completa della loro esperienza di gioco.
IV.6 Cybersecurity
Questi moduli di sicurezza informatica sono progettati per migliorare la postura di sicurezza del progetto. Il modulo major si concentra su una protezione robusta tramite un Web Application Firewall (WAF) e configurazioni di ModSecurity, nonch√© HashiCorp Vault per la gestione sicura dei segreti. I moduli minori completano questo sforzo aggiungendo funzionalit√† per la conformit√† GDPR, l'anonimizzazione dei dati degli utenti, la cancellazione degli account, l'autenticazione a due fattori (2FA) e i JSON Web Tokens (JWT), garantendo collettivamente l'impegno del progetto per la protezione dei dati, la privacy e la sicurezza dell'autenticazione.

‚Ä¢ Modulo major: Implementare WAF/ModSecurity con configurazione rinforzata e HashiCorp Vault per la gestione dei segreti.
L'obiettivo di questo modulo major √® migliorare l'infrastruttura di sicurezza del progetto implementando diversi componenti chiave. Caratteristiche principali e obiettivi includono:

‚ó¶ Configurare e distribuire un Web Application Firewall (WAF) e ModSecurity con una configurazione rigorosa e sicura per proteggere da attacchi basati sul web.

‚ó¶ Integrare HashiCorp Vault per gestire e archiviare in modo sicuro informazioni sensibili, come chiavi API, credenziali e variabili d'ambiente, garantendo che questi segreti siano adeguatamente crittografati e isolati.

Questo modulo major mira a rafforzare l'infrastruttura di sicurezza del progetto implementando misure di sicurezza robuste, inclusi WAF/ModSecurity per la protezione delle applicazioni web e HashiCorp Vault per la gestione dei segreti, garantendo un ambiente sicuro.

‚Ä¢ Modulo minor: Opzioni di conformit√† GDPR con anonimizzazione dei dati, gestione locale dei dati e cancellazione dell'account.
L'obiettivo di questo modulo minor √® introdurre opzioni di conformit√† GDPR che consentano agli utenti di esercitare i propri diritti sulla privacy dei dati. Caratteristiche principali e obiettivi includono:

‚ó¶ Implementare funzionalit√† conformi al GDPR che consentano agli utenti di richiedere l'anonimizzazione dei propri dati personali, garantendo che la loro identit√† e le informazioni sensibili siano protette.

‚ó¶ Fornire strumenti agli utenti per gestire i propri dati locali, inclusa la possibilit√† di visualizzare, modificare o eliminare le proprie informazioni personali archiviate all'interno del sistema.

‚ó¶ Offrire un processo semplificato per gli utenti per richiedere la cancellazione permanente dei propri account, inclusi tutti i dati associati, garantendo la conformit√† alle normative sulla protezione dei dati.
‚ó¶ Mantenere una comunicazione chiara e trasparente con gli utenti riguardo ai loro diritti sulla privacy dei dati, con opzioni facilmente accessibili per esercitare tali diritti.

Questo modulo minor mira a migliorare la privacy degli utenti e la protezione dei dati offrendo opzioni di conformit√† al GDPR che consentano agli utenti di controllare le proprie informazioni personali ed esercitare i propri diritti sulla privacy dei dati all'interno del sistema.

Se non hai familiarit√† con il Regolamento Generale sulla Protezione dei Dati (GDPR), √® essenziale comprendere i suoi principi e le sue implicazioni, in particolare per quanto riguarda la gestione e la privacy dei dati degli utenti. Il GDPR √® un regolamento che mira a proteggere i dati personali e la privacy degli individui all'interno dell'Unione Europea (UE) e dello Spazio Economico Europeo (SEE). Stabilisce regole e linee guida rigorose per le organizzazioni su come gestire e trattare i dati personali.

Per ottenere una migliore comprensione del GDPR e dei suoi requisiti, si consiglia vivamente di visitare il sito ufficiale della Commissione Europea sulla protezione dei dati1. Questo sito fornisce informazioni complete sul GDPR, inclusi i suoi principi, obiettivi e diritti degli utenti. Offre inoltre risorse aggiuntive per approfondire l'argomento e garantire la conformit√† al regolamento.

Se non hai familiarit√† con il GDPR, ti invitiamo a visitare il link fornito e a familiarizzare con le normative prima di procedere con questo progetto.

‚Ä¢ Modulo major: Implementare l'Autenticazione a Due Fattori (2FA) e JWT.
L'obiettivo di questo modulo major √® migliorare la sicurezza e l'autenticazione degli utenti introducendo l'Autenticazione a Due Fattori (2FA) e utilizzando JSON Web Tokens (JWT). Caratteristiche principali e obiettivi includono:

‚ó¶ Implementare l'Autenticazione a Due Fattori (2FA) come livello aggiuntivo di sicurezza per gli account utente, richiedendo agli utenti di fornire un metodo di verifica secondario, come un codice monouso, oltre alla password.

‚ó¶ Utilizzare JSON Web Tokens (JWT) come metodo sicuro per l'autenticazione e l'autorizzazione, garantendo che le sessioni utente e l'accesso alle risorse siano gestiti in modo sicuro.

‚ó¶ Fornire un processo di configurazione user-friendly per abilitare il 2FA, con opzioni per codici SMS, app di autenticazione o verifica via email.

‚ó¶ Garantire che i token JWT siano emessi e validati in modo sicuro per prevenire accessi non autorizzati agli account utente e ai dati sensibili.

Questo modulo major mira a rafforzare la sicurezza degli account utente offrendo l'Autenticazione a Due Fattori (2FA) e migliorando l'autenticazione e l'autorizzazione attraverso l'uso di JSON Web Tokens (JWT).

https://commission.europa.eu/law/law-topic/data-protection/data-protection-eu_en

IV.7 Devops
Questi moduli si concentrano sul miglioramento dell'infrastruttura e dell'architettura del progetto. I moduli principali affrontano la configurazione dell'infrastruttura per una gestione efficiente dei log utilizzando ELK (Elasticsearch, Logstash, Kibana), la progettazione del backend come microservizi per flessibilit√† e scalabilit√†, e l'implementazione di Prometheus/Grafana per un monitoraggio completo del sistema.

‚Ä¢ Modulo major: Configurazione dell'infrastruttura con ELK (Elasticsearch, Logstash, Kibana) per la gestione dei log.
L'obiettivo di questo modulo major √® stabilire un'infrastruttura robusta per la gestione e l'analisi dei log utilizzando lo stack ELK (Elasticsearch, Logstash, Kibana). Caratteristiche principali e obiettivi includono:

‚ó¶ Distribuire Elasticsearch per archiviare e indicizzare efficientemente i dati dei log, garantendo che siano facilmente ricercabili e accessibili.

‚ó¶ Configurare Logstash per raccogliere, elaborare e trasformare i dati dei log da varie fonti, inviandoli a Elasticsearch.

‚ó¶ Configurare Kibana per visualizzare i dati dei log, creare dashboard e generare approfondimenti dagli eventi dei log.

‚ó¶ Definire politiche di conservazione e archiviazione dei dati per gestire efficacemente l'archiviazione dei log.

‚ó¶ Implementare misure di sicurezza per proteggere i dati dei log e l'accesso ai componenti dello stack ELK.

Questo modulo major mira a stabilire un potente sistema di gestione e analisi dei log utilizzando lo stack ELK, consentendo un'efficace risoluzione dei problemi, monitoraggio e approfondimenti sul funzionamento e sulle prestazioni del sistema.

‚Ä¢ Modulo minor: Sistema di monitoraggio.
L'obiettivo di questo modulo minor √® configurare un sistema di monitoraggio completo utilizzando Prometheus e Grafana. Caratteristiche principali e obiettivi includono:

‚ó¶ Distribuire Prometheus come strumento di monitoraggio e allerta per raccogliere metriche e monitorare la salute e le prestazioni di vari componenti del sistema.

‚ó¶ Configurare esportatori di dati e integrazioni per catturare metriche da diversi servizi, database e componenti dell'infrastruttura.

‚ó¶ Creare dashboard personalizzati e visualizzazioni utilizzando Grafana per fornire approfondimenti in tempo reale sulle metriche e sulle prestazioni del sistema.

‚ó¶ Configurare regole di allerta in Prometheus per rilevare e rispondere proattivamente a problemi critici e anomalie.

‚ó¶ Garantire strategie adeguate di conservazione e archiviazione dei dati per le metriche storiche.

‚ó¶ Implementare meccanismi di autenticazione e controllo degli accessi sicuri per Grafana per proteggere i dati di monitoraggio sensibili.

Questo modulo minor mira a stabilire un'infrastruttura di monitoraggio robusta utilizzando Prometheus e Grafana, consentendo visibilit√† in tempo reale sulle metriche del sistema e il rilevamento proattivo dei problemi per migliorare le prestazioni e l'affidabilit√† del sistema.

‚Ä¢ Modulo major: Progettazione del backend come microservizi.
L'obiettivo di questo modulo major √® progettare l'architettura del backend del sistema utilizzando un approccio a microservizi. Caratteristiche principali e obiettivi includono:

‚ó¶ Dividere il backend in microservizi pi√π piccoli e debolmente accoppiati, ciascuno responsabile di funzioni o caratteristiche specifiche.

‚ó¶ Definire confini e interfacce chiari tra i microservizi per consentire uno sviluppo, distribuzione e scalabilit√† indipendenti.

‚ó¶ Implementare meccanismi di comunicazione tra i microservizi, come API RESTful o code di messaggi, per facilitare lo scambio di dati e il coordinamento.

‚ó¶ Garantire che ogni microservizio sia responsabile di un singolo compito o capacit√† aziendale ben definita, promuovendo la manutenibilit√† e la scalabilit√†.

Questo modulo major mira a migliorare l'architettura del sistema adottando un approccio di progettazione a microservizi, consentendo una maggiore flessibilit√†, scalabilit√† e manutenibilit√† dei componenti del backend.

IV.8 Grafica
‚Ä¢ Modulo major: Implementazione di Tecniche Avanzate 3D

Questo modulo major, "Grafica", si concentra sul miglioramento degli aspetti visivi del gioco Pong. Introduce l'uso di tecniche avanzate 3D per creare un'esperienza di gioco pi√π immersiva. In particolare, il gioco Pong sar√† sviluppato utilizzando Babylon.js per ottenere gli effetti visivi desiderati.

‚ó¶ Grafica 3D Avanzata: L'obiettivo major di questo modulo √® implementare tecniche avanzate di grafica 3D per elevare la qualit√† visiva del gioco Pong. Utilizzando Babylon.js, l'obiettivo √® creare effetti visivi sorprendenti che immergano i giocatori nell'ambiente di gioco.

‚ó¶ Gameplay Immersivo: L'incorporazione di tecniche avanzate 3D migliora l'esperienza complessiva di gioco fornendo agli utenti un gioco Pong visivamente coinvolgente e accattivante.

‚ó¶ Integrazione Tecnologica: La tecnologia scelta per questo modulo √® Babylon.js. Questi strumenti saranno utilizzati per creare la grafica 3D, garantendo compatibilit√† e prestazioni ottimali.

Questo modulo major mira a rivoluzionare gli elementi visivi del gioco Pong introducendo tecniche avanzate 3D. Attraverso l'uso di Babylon.js, puntiamo a fornire ai giocatori un'esperienza di gioco immersiva e visivamente sorprendente.

IV.9 Accessibilit√†
Questi moduli sono progettati per migliorare l'accessibilit√† della nostra applicazione web, con un focus sull'assicurare la compatibilit√† su tutti i dispositivi, l'espansione del supporto ai browser, l'offerta di capacit√† multilingue, la fornitura di funzionalit√† di accessibilit√† per utenti ipovedenti e l'integrazione del Rendering Lato Server (SSR) per migliorare le prestazioni e l'esperienza utente.

‚Ä¢ Modulo minor: Supporto su tutti i dispositivi.
In questo modulo, l'obiettivo major √® garantire che il tuo sito web funzioni senza problemi su tutti i tipi di dispositivi. Caratteristiche principali e obiettivi includono:

‚ó¶ Garantire che il sito web sia reattivo, adattandosi a diverse dimensioni e orientamenti dello schermo, fornendo un'esperienza utente coerente su desktop, laptop, tablet e smartphone.

‚ó¶ Garantire che gli utenti possano navigare e interagire facilmente con il sito web utilizzando diversi metodi di input, come touchscreen, tastiere e mouse, a seconda del dispositivo utilizzato.

Questo modulo mira a fornire un'esperienza coerente e user-friendly su tutti i dispositivi, massimizzando l'accessibilit√† e la soddisfazione degli utenti.

‚Ä¢ Modulo minor: Espansione della Compatibilit√† con i Browser.
In questo modulo minor, l'obiettivo √® migliorare la compatibilit√† dell'applicazione web aggiungendo il supporto per un browser web aggiuntivo. Caratteristiche principali e obiettivi includono:

‚ó¶ Estendere il supporto ai browser per includere un browser web aggiuntivo, garantendo che gli utenti possano accedere e utilizzare l'applicazione senza problemi.

‚ó¶ Condurre test approfonditi e ottimizzazioni per garantire che l'applicazione web funzioni correttamente e venga visualizzata correttamente nel nuovo browser supportato.

‚ó¶ Risolvere eventuali problemi di compatibilit√† o discrepanze di rendering che potrebbero sorgere nel browser aggiunto.

‚ó¶ Garantire un'esperienza utente coerente su tutti i browser supportati, mantenendo usabilit√† e funzionalit√†.

Questo modulo minor mira ad ampliare l'accessibilit√† dell'applicazione web supportando un browser web aggiuntivo, offrendo agli utenti pi√π opzioni per la loro esperienza di navigazione.

‚Ä¢ Modulo minor: Supporto per pi√π lingue.
In questo modulo minor, l'obiettivo √® garantire che il tuo sito web supporti pi√π lingue per soddisfare una base di utenti diversificata. Caratteristiche principali e obiettivi includono:

‚ó¶ Implementare il supporto per un minimo di tre lingue sul sito web per accogliere un pubblico ampio.

‚ó¶ Fornire un selettore o interruttore di lingua che consenta agli utenti di cambiare facilmente la lingua del sito web in base alle loro preferenze.

‚ó¶ Tradurre i contenuti essenziali del sito web, come menu di navigazione, intestazioni e informazioni chiave, nelle lingue supportate.

‚ó¶ Garantire che gli utenti possano navigare e interagire con il sito web senza problemi, indipendentemente dalla lingua selezionata.

‚ó¶ Considerare l'uso di pacchetti di lingue o librerie di localizzazione per semplificare il processo di traduzione e mantenere la coerenza tra le diverse lingue.

‚ó¶ Consentire agli utenti di impostare la loro lingua preferita come predefinita per visite successive.

Questo modulo minor mira a migliorare l'accessibilit√† e l'inclusivit√† del tuo sito web offrendo contenuti in pi√π lingue, rendendolo pi√π user-friendly per un pubblico internazionale diversificato.

‚Ä¢ Modulo minor: Aggiunta di funzionalit√† di accessibilit√† per utenti ipovedenti.
In questo modulo minor, l'obiettivo √® rendere il tuo sito web pi√π accessibile per gli utenti ipovedenti. Caratteristiche principali includono:

‚ó¶ Supporto per lettori di schermo e tecnologie assistive.
‚ó¶ Testo alternativo chiaro e descrittivo per le immagini.
‚ó¶ Schema di colori ad alto contrasto per una migliore leggibilit√†.
‚ó¶ Navigazione tramite tastiera e gestione del focus.
‚ó¶ Opzioni per regolare la dimensione del testo.
‚ó¶ Aggiornamenti regolari per soddisfare gli standard di accessibilit√†.

Questo modulo mira a migliorare l'usabilit√† del sito web per individui con disabilit√† visive e garantire la conformit√† agli standard di accessibilit√†.

‚Ä¢ Modulo minor: Integrazione del Rendering Lato Server (SSR).
In questo modulo minor, l'attenzione √® sull'integrazione del Rendering Lato Server (SSR) per migliorare le prestazioni e l'esperienza utente del tuo sito web. Obiettivi principali includono:

‚ó¶ Implementare SSR per migliorare la velocit√† di caricamento del sito web e le prestazioni complessive.

‚ó¶ Garantire che i contenuti siano pre-renderizzati sul server e consegnati ai browser degli utenti per caricamenti iniziali pi√π rapidi.

‚ó¶ Ottimizzare la SEO fornendo ai motori di ricerca contenuti HTML pre-renderizzati.

‚ó¶ Mantenere un'esperienza utente coerente beneficiando dei vantaggi del SSR.

Questo modulo mira a migliorare le prestazioni del sito web e la SEO integrando il Rendering Lato Server per caricamenti di pagina pi√π rapidi e un'esperienza utente migliorata.

IV.10 Pong lato server
‚Ä¢ Modulo major: Sostituire il Pong di base con un Pong lato server e implementare un'API.
In questo modulo major, l'obiettivo √® sostituire il gioco Pong di base con un gioco Pong lato server, accompagnato dall'implementazione di un'API. Caratteristiche principali e obiettivi includono:

‚ó¶ Sviluppare la logica lato server per il gioco Pong per gestire il gameplay, il movimento della pallina, il punteggio e le interazioni tra i giocatori.

‚ó¶ Creare un'API che esponga le risorse e gli endpoint necessari per interagire con il gioco Pong, consentendo l'uso parziale del gioco tramite l'interfaccia a riga di comando (CLI) e l'interfaccia web.

‚ó¶ Progettare e implementare gli endpoint API per supportare l'inizializzazione del gioco, i controlli dei giocatori e gli aggiornamenti dello stato del gioco.

‚ó¶ Garantire che il gioco Pong lato server sia reattivo, offrendo un'esperienza di gioco coinvolgente e piacevole.

‚ó¶ Integrare il gioco Pong lato server con l'applicazione web, consentendo agli utenti di giocare direttamente sul sito web.

Questo modulo major mira a migliorare il gioco Pong migrandolo al lato server, consentendo l'interazione sia tramite un'interfaccia web che CLI, offrendo un'API per un facile accesso alle risorse e alle funzionalit√† del gioco.

‚Ä¢ Modulo major: Abilitare il gameplay di Pong tramite CLI contro utenti web con integrazione API.
In questo modulo major, l'obiettivo √® sviluppare un'interfaccia a riga di comando (CLI) che consenta agli utenti di giocare a Pong contro giocatori che utilizzano la versione web del gioco. La CLI dovrebbe connettersi senza problemi all'applicazione web, consentendo agli utenti CLI di unirsi e interagire con i giocatori web. Caratteristiche principali e obiettivi includono:

‚ó¶ Creare un'applicazione CLI robusta che replichi l'esperienza di gioco Pong disponibile sul sito web, fornendo agli utenti CLI la possibilit√† di iniziare e partecipare a partite di Pong.

‚ó¶ Utilizzare l'API per stabilire la comunicazione tra la CLI e l'applicazione web, consentendo agli utenti CLI di connettersi al sito e interagire con i giocatori web.

‚ó¶ Sviluppare un meccanismo di autenticazione degli utenti all'interno della CLI, consentendo agli utenti CLI di accedere in modo sicuro all'applicazione web.

‚ó¶ Implementare una sincronizzazione in tempo reale tra gli utenti CLI e web, garantendo che le interazioni di gioco siano fluide e coerenti.

‚ó¶ Consentire agli utenti CLI di unirsi e creare partite di Pong con giocatori web, facilitando il gameplay cross-platform.

‚ó¶ Fornire documentazione completa e linee guida su come utilizzare efficacemente la CLI per le partite di Pong contro utenti web.

Questo modulo major mira a migliorare l'esperienza di gioco Pong creando una CLI che collega senza problemi gli utenti CLI ai giocatori web tramite l'integrazione API, offrendo un ambiente di gioco unificato e interattivo.

Se desideri completare questo modulo, ti consigliamo vivamente di completare il precedente.

Capitolo V
Parte Bonus

Per questo progetto, la sezione bonus √® progettata per essere semplice. √à richiesto includere moduli aggiuntivi.

‚Ä¢ Cinque punti saranno assegnati per ogni modulo minor.
‚Ä¢ Dieci punti saranno assegnati per ogni modulo major.

La parte bonus sar√† valutata solo se la parte obbligatoria √®
PERFETTA. "Perfetta" significa che la parte obbligatoria √® stata completata completamente e funziona senza alcun problema. Se non soddisfi TUTTI i requisiti obbligatori, la tua parte bonus non sar√† valutata affatto.


Capitolo III
Parte obbligatoria

Questo progetto riguarda la creazione di un sito web per il grande torneo di Pong!

III.1 Panoramica
Il tuo software offrir√† una bella interfaccia utente e funzionalit√† multiplayer in tempo reale che permetteranno di giocare a Pong con tutti i tuoi amici!

‚Ä¢ Inizialmente, il tuo progetto deve aderire alle linee guida obbligatorie come requisito minimo (vedi sezione successiva), che rappresenteranno solo una piccola parte del voto finale.

‚Ä¢ La seconda parte di questo subject offrir√† moduli aggiuntivi che possono sostituire o integrare la parte obbligatoria.

‚Ä¢ L'uso di librerie o strumenti che forniscono una soluzione immediata e completa per un'intera funzionalit√† o modulo √® proibito.

‚Ä¢ Qualsiasi istruzione diretta riguardante l'uso (pu√≤, deve, non pu√≤) di una libreria o strumento di terze parti deve essere seguita.

‚Ä¢ L'uso di una piccola libreria o strumento che risolve un compito semplice e unico rappresentando un sottocomponente di una funzionalit√† o modulo pi√π grande, √® consentito.

‚Ä¢ Durante la valutazione, il team giustificher√† qualsiasi utilizzo di
librerie o strumenti che non sono esplicitamente approvati dalle linee guida del progetto e che non sono in contraddizione con i vincoli del progetto.

‚Ä¢ Durante la valutazione, l'evaluatore si assumer√† la responsabilit√† di determinare se l'uso di una specifica libreria o strumento
√® legittimo (e consentito) o se risolve essenzialmente un'intera funzionalit√† o modulo (e quindi √® proibito).

III.2 Requisiti tecnici minimi
Il tuo progetto deve rispettare le seguenti regole:

Alcuni di questi vincoli possono essere superati dalla scelta di moduli specifici.

‚Ä¢ Sei libero di sviluppare il sito, con o senza un backend.

‚ó¶ Se scegli di includere un backend, deve essere scritto in puro PHP senza framework. Tuttavia, questo requisito pu√≤ essere superato dal modulo Framework.

‚ó¶ Se il tuo backend o framework utilizza un database, devi seguire i vincoli del modulo Database.

‚Ä¢ Il frontend deve essere sviluppato utilizzando Typescript come codice base. Tuttavia, questo
requisito pu√≤ essere modificato tramite il modulo FrontEnd.

‚Ä¢ Il tuo sito web deve essere un'applicazione a pagina singola. L'utente deve essere in grado di utilizzare i pulsanti Indietro e Avanti del browser.

‚Ä¢ Il tuo sito web deve essere compatibile con l'ultima versione stabile e aggiornata di
Mozilla Firefox. Ovviamente, pu√≤ essere compatibile con altri browser web!

‚Ä¢ L'utente non deve incontrare errori o avvisi non gestiti durante la navigazione sul sito web.

‚Ä¢ Devi utilizzare Docker per eseguire il tuo sito web. Tutto deve essere avviato con una singola riga di comando per eseguire un container autonomo.

Esistono diverse tecnologie per i container: Docker, containerd, podman, ecc.
Sui computer del tuo campus, potresti accedere al software dei container in modalit√† senza privilegi di root per motivi di sicurezza. Questo potrebbe portare ai seguenti vincoli aggiuntivi:

‚Ä¢ Il tuo runtime deve essere posizionato in /goinfre o /sgoinfre.

‚Ä¢ Non puoi utilizzare "bind-mount volumes" tra l'host e il container se vengono utilizzati UID non-root nel container.

A seconda dei requisiti attuali del subject (evidenziati in verde sopra) e della configurazione locale nei cluster, potresti dover
adottare strategie diverse, come: soluzione container in macchina virtuale, ricostruire il tuo container dopo le modifiche, creare la tua immagine con root come unico UID.

III.3 Gioco
Lo scopo major di questo sito web √® giocare a Pong contro altri giocatori.

‚Ä¢ Gli utenti devono poter partecipare a una partita di Pong in tempo reale contro un altro giocatore direttamente sul sito web.
Entrambi i giocatori utilizzeranno la stessa tastiera. Il modulo Giocatori remoti pu√≤ migliorare questa funzionalit√† con giocatori remoti.

‚Ä¢ Un giocatore deve poter giocare contro un altro, e deve essere disponibile un sistema di torneo.
Questo torneo consister√† in pi√π giocatori che possono alternarsi giocando l'uno contro l'altro.
Hai flessibilit√† su come implementare il torneo, ma deve mostrare chiaramente chi sta giocando contro chi e l'ordine di gioco.

‚Ä¢ √à richiesto un sistema di registrazione: all'inizio di un torneo, ogni giocatore deve inserire il proprio alias.
Gli alias verranno resettati quando inizia un nuovo torneo. Tuttavia, questo requisito pu√≤ essere modificato utilizzando il modulo Gestione Utenti Standard.

‚Ä¢ Deve esserci un sistema di matchmaking: il sistema del torneo dovrebbe organizzare il matchmaking dei partecipanti e annunciare la prossima partita.

‚Ä¢ Tutti i giocatori devono rispettare le stesse regole, incluso avere la stessa velocit√† della racchetta. 
Questo requisito si applica anche quando si utilizza l'IA; l'IA deve mostrare la stessa velocit√† di un giocatore normale.

‚Ä¢ Il gioco deve rispettare i vincoli predefiniti del frontend (come descritto sopra), oppure puoi scegliere di utilizzare il modulo FrontEnd o sovrascriverlo con il modulo Grafica.
Sebbene l'estetica visiva possa variare, il gioco deve comunque catturare l'essenza del Pong originale (1972).

III.4 Preoccupazioni sulla sicurezza
Per creare un sito web funzionale, ci sono diverse preoccupazioni sulla sicurezza che devi affrontare:

‚Ä¢ Qualsiasi password memorizzata nel tuo database, se applicabile, deve essere hashata.
‚Ä¢ Il tuo sito web deve essere protetto contro attacchi SQL injection/XSS.
‚Ä¢ Se hai un backend o altre funzionalit√†, √® obbligatorio abilitare una connessione HTTPS per tutti gli aspetti (usa wss invece di ws, ad esempio).
‚Ä¢ Devi implementare meccanismi di validazione per i form e qualsiasi input utente, sia sulla pagina base se non viene utilizzato un backend, sia lato server se viene impiegato un backend.
‚Ä¢ Indipendentemente dal fatto che tu scelga di implementare il modulo di sicurezza JWT con 2FA, √® essenziale dare priorit√† alla sicurezza del tuo sito web. Ad esempio, se scegli di creare un'API, assicurati che le tue route siano protette. Anche se decidi di non utilizzare i token JWT, la sicurezza del sito rimane fondamentale.

Assicurati di utilizzare un algoritmo di hashing delle password robusto.

Per ovvi motivi di sicurezza, qualsiasi credenziale, chiave API, variabile d'ambiente, ecc., deve essere salvata localmente in un file .env e ignorata da git. Le credenziali archiviate pubblicamente causeranno il fallimento del tuo progetto.

Capitolo IV
Moduli

Ora che hai completato il 25% del progetto, congratulazioni!

Con un sito web di base funzionante, il prossimo passo √® scegliere i moduli per ulteriori miglioramenti.

Per raggiungere il 100% del completamento del progetto, √® necessario un minimo di 7 moduli principali. √à cruciale esaminare attentamente ogni modulo poich√© potrebbe richiedere modifiche al tuo sito web di base. Pertanto, ti consigliamo vivamente di leggere attentamente l'intero subject.

Due Moduli Minori contano come un Modulo Maggiore.

IV.1 Panoramica
‚Ä¢ Web (Samus)

‚ó¶ Modulo major: Utilizzare un framework per costruire il backend.                            ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Utilizzare un framework o un toolkit per costruire il frontend.              ‚ù§Ô∏è‚Äçü©π    (ulisse-andrea)
‚ó¶ Modulo minor: Utilizzare un database per il backend.                                       ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo major: Memorizzare il punteggio di un torneo sulla Blockchain.                      ‚ù§Ô∏è‚Äçü©π

TOT 3

‚Ä¢ Gestione Utenti (backend+fontend) (samus + uli, francesco)

‚ó¶ Modulo major: Gestione standard degli utenti, autenticazione, utenti attraverso i tornei.  ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo major: Implementare un'autenticazione remota.                                       ‚ù§Ô∏è‚Äçü©π

TOT 5

‚Ä¢ Gameplay ed esperienza utente (Andrea)
‚ó¶ Modulo major: Giocatori remoti.                                                            ‚ù§Ô∏è‚Äçü©π forse
‚ó¶ Modulo major: Multiplayer (pi√π di 2 giocatori nello stesso gioco).                         ‚ù§Ô∏è‚Äçü©π forse
‚ó¶ Modulo major: Aggiungere un altro gioco con cronologia utente e matchmaking.               ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Opzioni di personalizzazione del gioco.                                      ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo major: Chat in tempo reale.                                                         ‚ù§Ô∏è‚Äçü©π forse

TOT 8.5 (2 forse)

‚Ä¢ AI-Algo  (Samus)

‚ó¶ Modulo major: Introdurre un avversario AI.                                                 ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Dashboard per statistiche utente e di gioco.                                 ‚ù§Ô∏è‚Äçü©π

TOT 10 (2 forse)

‚Ä¢ Cybersecurity

‚ó¶ Modulo major: Implementare WAF/ModSecurity con una configurazione rinforzata e HashiCorp Vault per la gestione dei segreti.
‚ó¶ Modulo minor: Opzioni di conformit√† GDPR con anonimizzazione dei dati, gestione locale dei dati e cancellazione dell'account.
‚ó¶ Modulo major: Implementare l'autenticazione a due fattori (2FA) e JWT.

‚Ä¢ Devops

‚ó¶ Modulo major: Configurazione dell'infrastruttura per la gestione dei log.
‚ó¶ Modulo minor: Sistema di monitoraggio.
‚ó¶ Modulo major: Progettare il backend come microservizi.

‚Ä¢ Grafica (uli - andrea)

‚ó¶ Modulo major: Utilizzare tecniche avanzate 3D.                                            ‚ù§Ô∏è‚Äçü©π forse

TOT 11 (3 forse)

‚Ä¢ Accessibilit√† (francesco)

‚ó¶ Modulo minor: Supporto su tutti i dispositivi.                                            ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Espansione della compatibilit√† con i browser.
‚ó¶ Modulo minor: Supporto per pi√π lingue.                                                    ‚ù§Ô∏è‚Äçü©π
‚ó¶ Modulo minor: Aggiunta di funzionalit√† di accessibilit√† per utenti ipovedenti.
‚ó¶ Modulo minor: Integrazione del rendering lato server (SSR).

TOT 12

‚Ä¢ Pong lato server

‚ó¶ Modulo major: Sostituire il Pong di base con un Pong lato server e implementare un'API.

‚ó¶ Modulo major: Abilitare il gameplay di Pong tramite CLI contro utenti web con integrazione API.

IV.2 Web
Questi moduli consentono l'integrazione di funzionalit√† web avanzate nel tuo gioco Pong.

‚Ä¢ Modulo major: Utilizzare un framework per costruire il backend.
In questo modulo major, √® richiesto l'uso di un framework web specifico per lo sviluppo del backend: Fastify con Node.js.

Puoi creare il backend senza utilizzare i vincoli di questo modulo utilizzando il linguaggio backend predefinito (come specificato sopra nella parte obbligatoria). Tuttavia, questo modulo sar√† valido solo se segui i suoi requisiti.

‚Ä¢ Modulo minor: Utilizzare un framework o toolkit per costruire il frontend.
Il tuo sviluppo frontend deve utilizzare Tailwind CSS in aggiunta a Typescript, e nient'altro.

Puoi creare un frontend senza utilizzare i vincoli di questo modulo seguendo le direttive frontend predefinite (come specificato sopra nella parte obbligatoria). Tuttavia, questo modulo sar√† valido solo se segui i suoi requisiti.

‚Ä¢ Modulo minor: Utilizzare un database per il backend -e altro.
Il database designato per tutte le istanze DB nel tuo progetto √® SQLite. Questa scelta garantisce la coerenza dei dati e la compatibilit√† tra tutti i componenti del progetto e potrebbe essere un prerequisito per altri moduli, come il modulo Framework backend.

‚Ä¢ Modulo major: Memorizzare il punteggio di un torneo sulla Blockchain.
Questo modulo major si concentra sull'implementazione di una funzionalit√† all'interno del sito web Pong per memorizzare in modo sicuro i punteggi dei tornei su una blockchain. √à essenziale chiarire che, per scopi di sviluppo e test, utilizzeremo un ambiente blockchain di test. La blockchain scelta per questa implementazione √® Avalanche, e Solidity sar√† il linguaggio di programmazione utilizzato per lo sviluppo degli smart contract.

‚ó¶ Integrazione Blockchain: L'obiettivo major di questo modulo √® integrare senza problemi la tecnologia blockchain, in particolare Avalanche, nel sito web Pong. Questa integrazione garantisce la memorizzazione sicura e immutabile dei punteggi dei tornei, fornendo ai giocatori un registro trasparente e a prova di manomissione dei loro risultati di gioco.

‚ó¶ Smart Contract Solidity: Per interagire con la blockchain, svilupperemo smart contract in Solidity. Questi contratti saranno responsabili della registrazione, gestione e recupero dei punteggi dei tornei.

‚ó¶ Blockchain di test: Come accennato in precedenza, verr√† utilizzata una blockchain di test per scopi di sviluppo e test. Questo garantisce che tutte le funzionalit√† relative alla blockchain siano convalidate a fondo senza alcun rischio associato a una blockchain live.

‚ó¶ Interoperabilit√†: Questo modulo potrebbe avere dipendenze da altri moduli, in particolare il modulo Framework backend. L'integrazione della funzionalit√† blockchain potrebbe richiedere adeguamenti nel backend per accogliere le interazioni con la blockchain.

Implementando questo modulo, miriamo a migliorare il sito web di Pong introducendo un sistema di archiviazione dei punteggi basato su blockchain. Gli utenti beneficeranno di un ulteriore livello di sicurezza e trasparenza, garantendo l'integrit√† dei loro punteggi di gioco. Il modulo enfatizza l'uso di un ambiente blockchain di test per minimizzare i rischi associati allo sviluppo su blockchain.

IV.3 Gestione Utenti
Questo modulo esplora il campo della Gestione Utenti, affrontando aspetti chiave delle interazioni degli utenti e del controllo degli accessi all'interno della piattaforma Pong. Comprende due componenti principali, ciascuno focalizzato su elementi essenziali della gestione e autenticazione degli utenti: la partecipazione degli utenti a pi√π tornei e l'implementazione dell'autenticazione remota.

‚Ä¢ Modulo major: Gestione standard degli utenti, autenticazione e utenti attraverso i tornei.

‚ó¶ Gli utenti possono iscriversi al sito web in modo sicuro.
‚ó¶ Gli utenti registrati possono accedere in modo sicuro.
‚ó¶ Gli utenti possono selezionare un nome visualizzato unico per partecipare ai tornei.
‚ó¶ Gli utenti possono aggiornare le proprie informazioni.
‚ó¶ Gli utenti possono caricare un avatar, con un'opzione predefinita se non ne viene fornito uno.
‚ó¶ Gli utenti possono aggiungere altri come amici e visualizzare il loro stato online.
‚ó¶ I profili utente mostrano statistiche, come vittorie e sconfitte.
‚ó¶ Ogni utente ha una Cronologia Partite che include partite 1v1, date e dettagli rilevanti, accessibile agli utenti connessi.

La gestione di nomi utente/email duplicati √® a tua discrezione; assicurati di fornire una soluzione logica.

‚Ä¢ Modulo major: Implementare l'autenticazione remota.
In questo modulo major, l'obiettivo √® implementare il seguente sistema di autenticazione: Google Sign-in.

Caratteristiche principali e obiettivi includono:

‚ó¶ Integrare il sistema di autenticazione, consentendo agli utenti di accedere in modo sicuro.
‚ó¶ Ottenere le credenziali e i permessi necessari dall'autorit√† per abilitare l'accesso sicuro.
‚ó¶ Implementare flussi di login e autorizzazione user-friendly che rispettino le migliori pratiche e gli standard di sicurezza.
‚ó¶ Garantire lo scambio sicuro di token di autenticazione e informazioni utente tra l'applicazione web e il provider di autenticazione.

Questo modulo major mira a fornire un'autenticazione remota degli utenti, offrendo loro un modo sicuro e conveniente per accedere all'applicazione web.
IV.4 Gameplay ed esperienza utente
Questi moduli sono progettati per migliorare l'esperienza complessiva di gioco del progetto.

‚Ä¢ Modulo major: Giocatori remoti
Dovrebbe essere possibile per due giocatori giocare da remoto. Ogni giocatore si trova su un computer separato, accedendo allo stesso sito web e giocando allo stesso gioco Pong.

Considera i problemi di rete, come disconnessioni improvvise o lag.
Devi offrire la migliore esperienza utente possibile.

‚Ä¢ Modulo major: Pi√π giocatori
Dovrebbe essere possibile avere pi√π di due giocatori. Ogni giocatore necessita di un controllo in tempo reale (quindi il modulo "giocatori remoti" √® fortemente raccomandato). Sta a te decidere come il gioco potrebbe essere giocato con 3, 4, 5, 6 o pi√π giocatori. Oltre al gioco regolare a 2 giocatori, puoi definire un numero specifico di giocatori, maggiore di 2, per questo modulo multiplayer. Es: 4 giocatori potrebbero giocare su un tabellone quadrato, con ogni giocatore che controlla un lato unico del quadrato.

‚Ä¢ Modulo major: Aggiungere un altro gioco con cronologia utente e matchmaking.
L'obiettivo di questo modulo major √® introdurre un nuovo gioco, distinto da Pong, e incorporare funzionalit√† come il tracciamento della cronologia utente e il matchmaking. Caratteristiche principali e obiettivi includono:

‚ó¶ Sviluppare un nuovo gioco coinvolgente per diversificare l'offerta della piattaforma e intrattenere gli utenti.
‚ó¶ Implementare il tracciamento della cronologia utente per registrare e mostrare le statistiche di gioco individuali degli utenti.
‚ó¶ Creare un sistema di matchmaking per consentire agli utenti di trovare avversari e partecipare a partite eque e bilanciate.
‚ó¶ Garantire che la cronologia di gioco degli utenti e i dati di matchmaking siano archiviati in modo sicuro e rimangano aggiornati.
‚ó¶ Ottimizza le prestazioni e la reattivit√† del nuovo gioco per offrire un'esperienza utente piacevole. Aggiorna e mantieni regolarmente il gioco per correggere bug, aggiungere nuove funzionalit√† e migliorare il gameplay.

Questo modulo major mira ad ampliare la tua piattaforma introducendo un nuovo gioco, migliorando il coinvolgimento degli utenti con la cronologia delle partite e facilitando il matchmaking per un'esperienza di gioco piacevole.

‚Ä¢ Modulo minor: Opzioni di personalizzazione del gioco.
In questo modulo minor, l'obiettivo √® fornire opzioni di personalizzazione per tutti i giochi disponibili sulla piattaforma. Caratteristiche principali e obiettivi includono:

‚ó¶ Offrire funzionalit√† di personalizzazione, come power-up, attacchi o mappe diverse, che migliorano l'esperienza di gioco.

‚ó¶ Consentire agli utenti di scegliere una versione predefinita del gioco con funzionalit√† di base se preferiscono un'esperienza pi√π semplice.

‚ó¶ Garantire che le opzioni di personalizzazione siano disponibili e applicabili a tutti i giochi offerti sulla piattaforma.

‚ó¶ Implementare menu o interfacce di impostazioni user-friendly per regolare i parametri di gioco.

‚ó¶ Mantenere la coerenza nelle funzionalit√† di personalizzazione tra tutti i giochi per fornire un'esperienza utente unificata.

Questo modulo mira a dare agli utenti la flessibilit√† di personalizzare la loro esperienza di gioco su tutti i giochi disponibili, fornendo una variet√† di opzioni di personalizzazione e offrendo anche una versione predefinita per coloro che preferiscono un gameplay pi√π semplice.

‚Ä¢ Modulo major: Chat in tempo reale.

In questo modulo, √® necessario creare una funzione di chat per gli utenti:

‚ó¶ L'utente dovrebbe essere in grado di inviare messaggi diretti ad altri utenti.
‚ó¶ L'utente dovrebbe essere in grado di bloccare altri utenti, impedendo loro di vedere ulteriori messaggi dall'account bloccato.
‚ó¶ L'utente dovrebbe essere in grado di invitare altri utenti a giocare a una partita di Pong tramite l'interfaccia della chat.
‚ó¶ Il sistema di torneo dovrebbe essere in grado di notificare agli utenti la prossima partita.
‚ó¶ L'utente dovrebbe essere in grado di accedere ai profili di altri giocatori tramite l'interfaccia della chat.

IV.5 AI-Algo
Questi moduli servono per introdurre elementi basati sui dati nel progetto. Il modulo major introduce un avversario AI per migliorare il gameplay, mentre il modulo minor si concentra su dashboard di statistiche per utenti e giochi, offrendo agli utenti una panoramica minimalista ma approfondita delle loro esperienze di gioco.

‚Ä¢ Modulo major: Introdurre un avversario AI.
In questo modulo major, l'obiettivo √® incorporare un giocatore AI nel gioco. Notare che l'uso dell'algoritmo A* non √® consentito per questo compito. Caratteristiche principali e obiettivi includono:

‚ó¶ Sviluppare un avversario AI che offra un'esperienza di gioco stimolante e coinvolgente per gli utenti.

‚ó¶ L'AI deve replicare il comportamento umano, il che significa che nella tua implementazione dell'AI, devi simulare l'input della tastiera. Il vincolo qui √® che l'AI pu√≤ aggiornare la sua visione del gioco solo una volta al secondo, richiedendo di anticipare i rimbalzi e altre azioni.

L'AI deve utilizzare i power-up se hai scelto di implementare il modulo Opzioni di personalizzazione del gioco.

‚ó¶ Implementare logiche e processi decisionali AI che consentano al giocatore AI di compiere mosse intelligenti e strategiche.

‚ó¶ Esplorare algoritmi e tecniche alternative per creare un giocatore AI efficace senza fare affidamento su A*.

‚ó¶ Garantire che l'AI si adatti a diversi scenari di gioco e interazioni con gli utenti.

Dovrai spiegare in dettaglio come funziona la tua AI durante la valutazione. Creare un'AI che non faccia nulla √® strettamente proibito; deve avere la capacit√† di vincere occasionalmente.

Questo modulo major mira a migliorare il gioco introducendo un avversario AI che aggiunge emozione e competitivit√† senza fare affidamento sull'algoritmo A*.

‚Ä¢ Modulo minor: Dashboard di statistiche per utenti e giochi.
In questo modulo minor, l'obiettivo √® introdurre dashboard che mostrino statistiche per singoli utenti e sessioni di gioco. Caratteristiche principali e obiettivi includono:

‚ó¶ Creare dashboard user-friendly che forniscano agli utenti informazioni sulle loro statistiche di gioco.

‚ó¶ Sviluppare un dashboard separato per le sessioni di gioco, mostrando statistiche dettagliate, risultati e dati storici per ogni partita.

‚ó¶ Garantire che i dashboard offrano un'interfaccia utente intuitiva e informativa per tracciare e analizzare i dati.

‚ó¶ Implementare tecniche di visualizzazione dei dati, come grafici e diagrammi, per presentare le statistiche in modo chiaro e visivamente accattivante.

‚ó¶ Consentire agli utenti di accedere e esplorare comodamente la propria cronologia di gioco e le metriche delle prestazioni.

‚ó¶ Sentiti libero di aggiungere qualsiasi metrica che ritieni utile.

Questo modulo minor mira a fornire agli utenti la possibilit√† di monitorare le loro statistiche di gioco e i dettagli delle sessioni di gioco attraverso dashboard user-friendly, offrendo una visione completa della loro esperienza di gioco.
IV.6 Cybersecurity
Questi moduli di sicurezza informatica sono progettati per migliorare la postura di sicurezza del progetto. Il modulo major si concentra su una protezione robusta tramite un Web Application Firewall (WAF) e configurazioni di ModSecurity, nonch√© HashiCorp Vault per la gestione sicura dei segreti. I moduli minori completano questo sforzo aggiungendo funzionalit√† per la conformit√† GDPR, l'anonimizzazione dei dati degli utenti, la cancellazione degli account, l'autenticazione a due fattori (2FA) e i JSON Web Tokens (JWT), garantendo collettivamente l'impegno del progetto per la protezione dei dati, la privacy e la sicurezza dell'autenticazione.

‚Ä¢ Modulo major: Implementare WAF/ModSecurity con configurazione rinforzata e HashiCorp Vault per la gestione dei segreti.
L'obiettivo di questo modulo major √® migliorare l'infrastruttura di sicurezza del progetto implementando diversi componenti chiave. Caratteristiche principali e obiettivi includono:

‚ó¶ Configurare e distribuire un Web Application Firewall (WAF) e ModSecurity con una configurazione rigorosa e sicura per proteggere da attacchi basati sul web.

‚ó¶ Integrare HashiCorp Vault per gestire e archiviare in modo sicuro informazioni sensibili, come chiavi API, credenziali e variabili d'ambiente, garantendo che questi segreti siano adeguatamente crittografati e isolati.

Questo modulo major mira a rafforzare l'infrastruttura di sicurezza del progetto implementando misure di sicurezza robuste, inclusi WAF/ModSecurity per la protezione delle applicazioni web e HashiCorp Vault per la gestione dei segreti, garantendo un ambiente sicuro.

‚Ä¢ Modulo minor: Opzioni di conformit√† GDPR con anonimizzazione dei dati, gestione locale dei dati e cancellazione dell'account.
L'obiettivo di questo modulo minor √® introdurre opzioni di conformit√† GDPR che consentano agli utenti di esercitare i propri diritti sulla privacy dei dati. Caratteristiche principali e obiettivi includono:

‚ó¶ Implementare funzionalit√† conformi al GDPR che consentano agli utenti di richiedere l'anonimizzazione dei propri dati personali, garantendo che la loro identit√† e le informazioni sensibili siano protette.

‚ó¶ Fornire strumenti agli utenti per gestire i propri dati locali, inclusa la possibilit√† di visualizzare, modificare o eliminare le proprie informazioni personali archiviate all'interno del sistema.

‚ó¶ Offrire un processo semplificato per gli utenti per richiedere la cancellazione permanente dei propri account, inclusi tutti i dati associati, garantendo la conformit√† alle normative sulla protezione dei dati.
‚ó¶ Mantenere una comunicazione chiara e trasparente con gli utenti riguardo ai loro diritti sulla privacy dei dati, con opzioni facilmente accessibili per esercitare tali diritti.

Questo modulo minor mira a migliorare la privacy degli utenti e la protezione dei dati offrendo opzioni di conformit√† al GDPR che consentano agli utenti di controllare le proprie informazioni personali ed esercitare i propri diritti sulla privacy dei dati all'interno del sistema.

Se non hai familiarit√† con il Regolamento Generale sulla Protezione dei Dati (GDPR), √® essenziale comprendere i suoi principi e le sue implicazioni, in particolare per quanto riguarda la gestione e la privacy dei dati degli utenti. Il GDPR √® un regolamento che mira a proteggere i dati personali e la privacy degli individui all'interno dell'Unione Europea (UE) e dello Spazio Economico Europeo (SEE). Stabilisce regole e linee guida rigorose per le organizzazioni su come gestire e trattare i dati personali.

Per ottenere una migliore comprensione del GDPR e dei suoi requisiti, si consiglia vivamente di visitare il sito ufficiale della Commissione Europea sulla protezione dei dati1. Questo sito fornisce informazioni complete sul GDPR, inclusi i suoi principi, obiettivi e diritti degli utenti. Offre inoltre risorse aggiuntive per approfondire l'argomento e garantire la conformit√† al regolamento.

Se non hai familiarit√† con il GDPR, ti invitiamo a visitare il link fornito e a familiarizzare con le normative prima di procedere con questo progetto.

‚Ä¢ Modulo major: Implementare l'Autenticazione a Due Fattori (2FA) e JWT.
L'obiettivo di questo modulo major √® migliorare la sicurezza e l'autenticazione degli utenti introducendo l'Autenticazione a Due Fattori (2FA) e utilizzando JSON Web Tokens (JWT). Caratteristiche principali e obiettivi includono:

‚ó¶ Implementare l'Autenticazione a Due Fattori (2FA) come livello aggiuntivo di sicurezza per gli account utente, richiedendo agli utenti di fornire un metodo di verifica secondario, come un codice monouso, oltre alla password.

‚ó¶ Utilizzare JSON Web Tokens (JWT) come metodo sicuro per l'autenticazione e l'autorizzazione, garantendo che le sessioni utente e l'accesso alle risorse siano gestiti in modo sicuro.

‚ó¶ Fornire un processo di configurazione user-friendly per abilitare il 2FA, con opzioni per codici SMS, app di autenticazione o verifica via email.

‚ó¶ Garantire che i token JWT siano emessi e validati in modo sicuro per prevenire accessi non autorizzati agli account utente e ai dati sensibili.

Questo modulo major mira a rafforzare la sicurezza degli account utente offrendo l'Autenticazione a Due Fattori (2FA) e migliorando l'autenticazione e l'autorizzazione attraverso l'uso di JSON Web Tokens (JWT).

https://commission.europa.eu/law/law-topic/data-protection/data-protection-eu_en

IV.7 Devops
Questi moduli si concentrano sul miglioramento dell'infrastruttura e dell'architettura del progetto. I moduli principali affrontano la configurazione dell'infrastruttura per una gestione efficiente dei log utilizzando ELK (Elasticsearch, Logstash, Kibana), la progettazione del backend come microservizi per flessibilit√† e scalabilit√†, e l'implementazione di Prometheus/Grafana per un monitoraggio completo del sistema.

‚Ä¢ Modulo major: Configurazione dell'infrastruttura con ELK (Elasticsearch, Logstash, Kibana) per la gestione dei log.
L'obiettivo di questo modulo major √® stabilire un'infrastruttura robusta per la gestione e l'analisi dei log utilizzando lo stack ELK (Elasticsearch, Logstash, Kibana). Caratteristiche principali e obiettivi includono:

‚ó¶ Distribuire Elasticsearch per archiviare e indicizzare efficientemente i dati dei log, garantendo che siano facilmente ricercabili e accessibili.

‚ó¶ Configurare Logstash per raccogliere, elaborare e trasformare i dati dei log da varie fonti, inviandoli a Elasticsearch.

‚ó¶ Configurare Kibana per visualizzare i dati dei log, creare dashboard e generare approfondimenti dagli eventi dei log.

‚ó¶ Definire politiche di conservazione e archiviazione dei dati per gestire efficacemente l'archiviazione dei log.

‚ó¶ Implementare misure di sicurezza per proteggere i dati dei log e l'accesso ai componenti dello stack ELK.

Questo modulo major mira a stabilire un potente sistema di gestione e analisi dei log utilizzando lo stack ELK, consentendo un'efficace risoluzione dei problemi, monitoraggio e approfondimenti sul funzionamento e sulle prestazioni del sistema.

‚Ä¢ Modulo minor: Sistema di monitoraggio.
L'obiettivo di questo modulo minor √® configurare un sistema di monitoraggio completo utilizzando Prometheus e Grafana. Caratteristiche principali e obiettivi includono:

‚ó¶ Distribuire Prometheus come strumento di monitoraggio e allerta per raccogliere metriche e monitorare la salute e le prestazioni di vari componenti del sistema.

‚ó¶ Configurare esportatori di dati e integrazioni per catturare metriche da diversi servizi, database e componenti dell'infrastruttura.

‚ó¶ Creare dashboard personalizzati e visualizzazioni utilizzando Grafana per fornire approfondimenti in tempo reale sulle metriche e sulle prestazioni del sistema.

‚ó¶ Configurare regole di allerta in Prometheus per rilevare e rispondere proattivamente a problemi critici e anomalie.

‚ó¶ Garantire strategie adeguate di conservazione e archiviazione dei dati per le metriche storiche.

‚ó¶ Implementare meccanismi di autenticazione e controllo degli accessi sicuri per Grafana per proteggere i dati di monitoraggio sensibili.

Questo modulo minor mira a stabilire un'infrastruttura di monitoraggio robusta utilizzando Prometheus e Grafana, consentendo visibilit√† in tempo reale sulle metriche del sistema e il rilevamento proattivo dei problemi per migliorare le prestazioni e l'affidabilit√† del sistema.

‚Ä¢ Modulo major: Progettazione del backend come microservizi.
L'obiettivo di questo modulo major √® progettare l'architettura del backend del sistema utilizzando un approccio a microservizi. Caratteristiche principali e obiettivi includono:

‚ó¶ Dividere il backend in microservizi pi√π piccoli e debolmente accoppiati, ciascuno responsabile di funzioni o caratteristiche specifiche.

‚ó¶ Definire confini e interfacce chiari tra i microservizi per consentire uno sviluppo, distribuzione e scalabilit√† indipendenti.

‚ó¶ Implementare meccanismi di comunicazione tra i microservizi, come API RESTful o code di messaggi, per facilitare lo scambio di dati e il coordinamento.

‚ó¶ Garantire che ogni microservizio sia responsabile di un singolo compito o capacit√† aziendale ben definita, promuovendo la manutenibilit√† e la scalabilit√†.

Questo modulo major mira a migliorare l'architettura del sistema adottando un approccio di progettazione a microservizi, consentendo una maggiore flessibilit√†, scalabilit√† e manutenibilit√† dei componenti del backend.

IV.8 Grafica
‚Ä¢ Modulo major: Implementazione di Tecniche Avanzate 3D

Questo modulo major, "Grafica", si concentra sul miglioramento degli aspetti visivi del gioco Pong. Introduce l'uso di tecniche avanzate 3D per creare un'esperienza di gioco pi√π immersiva. In particolare, il gioco Pong sar√† sviluppato utilizzando Babylon.js per ottenere gli effetti visivi desiderati.

‚ó¶ Grafica 3D Avanzata: L'obiettivo major di questo modulo √® implementare tecniche avanzate di grafica 3D per elevare la qualit√† visiva del gioco Pong. Utilizzando Babylon.js, l'obiettivo √® creare effetti visivi sorprendenti che immergano i giocatori nell'ambiente di gioco.

‚ó¶ Gameplay Immersivo: L'incorporazione di tecniche avanzate 3D migliora l'esperienza complessiva di gioco fornendo agli utenti un gioco Pong visivamente coinvolgente e accattivante.

‚ó¶ Integrazione Tecnologica: La tecnologia scelta per questo modulo √® Babylon.js. Questi strumenti saranno utilizzati per creare la grafica 3D, garantendo compatibilit√† e prestazioni ottimali.

Questo modulo major mira a rivoluzionare gli elementi visivi del gioco Pong introducendo tecniche avanzate 3D. Attraverso l'uso di Babylon.js, puntiamo a fornire ai giocatori un'esperienza di gioco immersiva e visivamente sorprendente.

IV.9 Accessibilit√†
Questi moduli sono progettati per migliorare l'accessibilit√† della nostra applicazione web, con un focus sull'assicurare la compatibilit√† su tutti i dispositivi, l'espansione del supporto ai browser, l'offerta di capacit√† multilingue, la fornitura di funzionalit√† di accessibilit√† per utenti ipovedenti e l'integrazione del Rendering Lato Server (SSR) per migliorare le prestazioni e l'esperienza utente.

‚Ä¢ Modulo minor: Supporto su tutti i dispositivi.
In questo modulo, l'obiettivo major √® garantire che il tuo sito web funzioni senza problemi su tutti i tipi di dispositivi. Caratteristiche principali e obiettivi includono:

‚ó¶ Garantire che il sito web sia reattivo, adattandosi a diverse dimensioni e orientamenti dello schermo, fornendo un'esperienza utente coerente su desktop, laptop, tablet e smartphone.

‚ó¶ Garantire che gli utenti possano navigare e interagire facilmente con il sito web utilizzando diversi metodi di input, come touchscreen, tastiere e mouse, a seconda del dispositivo utilizzato.

Questo modulo mira a fornire un'esperienza coerente e user-friendly su tutti i dispositivi, massimizzando l'accessibilit√† e la soddisfazione degli utenti.

‚Ä¢ Modulo minor: Espansione della Compatibilit√† con i Browser.
In questo modulo minor, l'obiettivo √® migliorare la compatibilit√† dell'applicazione web aggiungendo il supporto per un browser web aggiuntivo. Caratteristiche principali e obiettivi includono:

‚ó¶ Estendere il supporto ai browser per includere un browser web aggiuntivo, garantendo che gli utenti possano accedere e utilizzare l'applicazione senza problemi.

‚ó¶ Condurre test approfonditi e ottimizzazioni per garantire che l'applicazione web funzioni correttamente e venga visualizzata correttamente nel nuovo browser supportato.

‚ó¶ Risolvere eventuali problemi di compatibilit√† o discrepanze di rendering che potrebbero sorgere nel browser aggiunto.

‚ó¶ Garantire un'esperienza utente coerente su tutti i browser supportati, mantenendo usabilit√† e funzionalit√†.

Questo modulo minor mira ad ampliare l'accessibilit√† dell'applicazione web supportando un browser web aggiuntivo, offrendo agli utenti pi√π opzioni per la loro esperienza di navigazione.

‚Ä¢ Modulo minor: Supporto per pi√π lingue.
In questo modulo minor, l'obiettivo √® garantire che il tuo sito web supporti pi√π lingue per soddisfare una base di utenti diversificata. Caratteristiche principali e obiettivi includono:

‚ó¶ Implementare il supporto per un minimo di tre lingue sul sito web per accogliere un pubblico ampio.

‚ó¶ Fornire un selettore o interruttore di lingua che consenta agli utenti di cambiare facilmente la lingua del sito web in base alle loro preferenze.

‚ó¶ Tradurre i contenuti essenziali del sito web, come menu di navigazione, intestazioni e informazioni chiave, nelle lingue supportate.

‚ó¶ Garantire che gli utenti possano navigare e interagire con il sito web senza problemi, indipendentemente dalla lingua selezionata.

‚ó¶ Considerare l'uso di pacchetti di lingue o librerie di localizzazione per semplificare il processo di traduzione e mantenere la coerenza tra le diverse lingue.

‚ó¶ Consentire agli utenti di impostare la loro lingua preferita come predefinita per visite successive.

Questo modulo minor mira a migliorare l'accessibilit√† e l'inclusivit√† del tuo sito web offrendo contenuti in pi√π lingue, rendendolo pi√π user-friendly per un pubblico internazionale diversificato.

‚Ä¢ Modulo minor: Aggiunta di funzionalit√† di accessibilit√† per utenti ipovedenti.
In questo modulo minor, l'obiettivo √® rendere il tuo sito web pi√π accessibile per gli utenti ipovedenti. Caratteristiche principali includono:

‚ó¶ Supporto per lettori di schermo e tecnologie assistive.
‚ó¶ Testo alternativo chiaro e descrittivo per le immagini.
‚ó¶ Schema di colori ad alto contrasto per una migliore leggibilit√†.
‚ó¶ Navigazione tramite tastiera e gestione del focus.
‚ó¶ Opzioni per regolare la dimensione del testo.
‚ó¶ Aggiornamenti regolari per soddisfare gli standard di accessibilit√†.

Questo modulo mira a migliorare l'usabilit√† del sito web per individui con disabilit√† visive e garantire la conformit√† agli standard di accessibilit√†.

‚Ä¢ Modulo minor: Integrazione del Rendering Lato Server (SSR).
In questo modulo minor, l'attenzione √® sull'integrazione del Rendering Lato Server (SSR) per migliorare le prestazioni e l'esperienza utente del tuo sito web. Obiettivi principali includono:

‚ó¶ Implementare SSR per migliorare la velocit√† di caricamento del sito web e le prestazioni complessive.

‚ó¶ Garantire che i contenuti siano pre-renderizzati sul server e consegnati ai browser degli utenti per caricamenti iniziali pi√π rapidi.

‚ó¶ Ottimizzare la SEO fornendo ai motori di ricerca contenuti HTML pre-renderizzati.

‚ó¶ Mantenere un'esperienza utente coerente beneficiando dei vantaggi del SSR.

Questo modulo mira a migliorare le prestazioni del sito web e la SEO integrando il Rendering Lato Server per caricamenti di pagina pi√π rapidi e un'esperienza utente migliorata.

IV.10 Pong lato server
‚Ä¢ Modulo major: Sostituire il Pong di base con un Pong lato server e implementare un'API.
In questo modulo major, l'obiettivo √® sostituire il gioco Pong di base con un gioco Pong lato server, accompagnato dall'implementazione di un'API. Caratteristiche principali e obiettivi includono:

‚ó¶ Sviluppare la logica lato server per il gioco Pong per gestire il gameplay, il movimento della pallina, il punteggio e le interazioni tra i giocatori.

‚ó¶ Creare un'API che esponga le risorse e gli endpoint necessari per interagire con il gioco Pong, consentendo l'uso parziale del gioco tramite l'interfaccia a riga di comando (CLI) e l'interfaccia web.

‚ó¶ Progettare e implementare gli endpoint API per supportare l'inizializzazione del gioco, i controlli dei giocatori e gli aggiornamenti dello stato del gioco.

‚ó¶ Garantire che il gioco Pong lato server sia reattivo, offrendo un'esperienza di gioco coinvolgente e piacevole.

‚ó¶ Integrare il gioco Pong lato server con l'applicazione web, consentendo agli utenti di giocare direttamente sul sito web.

Questo modulo major mira a migliorare il gioco Pong migrandolo al lato server, consentendo l'interazione sia tramite un'interfaccia web che CLI, offrendo un'API per un facile accesso alle risorse e alle funzionalit√† del gioco.

‚Ä¢ Modulo major: Abilitare il gameplay di Pong tramite CLI contro utenti web con integrazione API.
In questo modulo major, l'obiettivo √® sviluppare un'interfaccia a riga di comando (CLI) che consenta agli utenti di giocare a Pong contro giocatori che utilizzano la versione web del gioco. La CLI dovrebbe connettersi senza problemi all'applicazione web, consentendo agli utenti CLI di unirsi e interagire con i giocatori web. Caratteristiche principali e obiettivi includono:

‚ó¶ Creare un'applicazione CLI robusta che replichi l'esperienza di gioco Pong disponibile sul sito web, fornendo agli utenti CLI la possibilit√† di iniziare e partecipare a partite di Pong.

‚ó¶ Utilizzare l'API per stabilire la comunicazione tra la CLI e l'applicazione web, consentendo agli utenti CLI di connettersi al sito e interagire con i giocatori web.

‚ó¶ Sviluppare un meccanismo di autenticazione degli utenti all'interno della CLI, consentendo agli utenti CLI di accedere in modo sicuro all'applicazione web.

‚ó¶ Implementare una sincronizzazione in tempo reale tra gli utenti CLI e web, garantendo che le interazioni di gioco siano fluide e coerenti.

‚ó¶ Consentire agli utenti CLI di unirsi e creare partite di Pong con giocatori web, facilitando il gameplay cross-platform.

‚ó¶ Fornire documentazione completa e linee guida su come utilizzare efficacemente la CLI per le partite di Pong contro utenti web.

Questo modulo major mira a migliorare l'esperienza di gioco Pong creando una CLI che collega senza problemi gli utenti CLI ai giocatori web tramite l'integrazione API, offrendo un ambiente di gioco unificato e interattivo.

Se desideri completare questo modulo, ti consigliamo vivamente di completare il precedente.

Capitolo V
Parte Bonus

Per questo progetto, la sezione bonus √® progettata per essere semplice. √à richiesto includere moduli aggiuntivi.

‚Ä¢ Cinque punti saranno assegnati per ogni modulo minor.
‚Ä¢ Dieci punti saranno assegnati per ogni modulo major.

La parte bonus sar√† valutata solo se la parte obbligatoria √®
PERFETTA. "Perfetta" significa che la parte obbligatoria √® stata completata completamente e funziona senza alcun problema. Se non soddisfi TUTTI i requisiti obbligatori, la tua parte bonus non sar√† valutata affatto.

